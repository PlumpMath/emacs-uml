* overview

  [[http://www.gnu.org/software/emacs/][emacs]] is a text editor.  an extensible one.  it is mainly used for
  coding, but it can also do anything else.  uml is a modeling
  language for creating diagrams of software design.

  uml.el is a minor mode for emacs that makes it easier to build ascii
  sequence diagrams in emacs.  it's goal is to do for sequence
  diagrams what orgtbl-mode does for tables.

* example
  
uml.el will convert this content:

#+BEGIN_SRC
   person1     person2     kitchen
      |- make me a sandwich  |           |
      | no way   - -|           |
      |--sudo make me a sandwich                     |           |
      |          |-do it           |
      |          |          - -|
      |  sandwich - -|           |
#+END_SRC

into this:

#+BEGIN_SRC
   person1                    person2     kitchen
      |                          |           |
      |   make me a sandwich     |           |
      |------------------------->|           |
      |                          |           |
      |         no way           |           |
      |< - - - - - - - - - - - - |           |
      |                          |           |
      | sudo make me a sandwich  |           |
      |------------------------->|           |
      |                          |           |
      |                          |   do it   |
      |                          |---------->|
      |                          |           |
      |                          |< - - - - -|
      |                          |           |
      |        sandwich          |           |
      |< - - - - - - - - - - - - |           |
      |                          |           |
#+END_SRC

* features

  right now uml.el only supports sequence diagrams.  it may be
  extended for class diagrams one day.

  uml.el provides key bindings for more easily moving around sequence
  diagrams, and aligning and redrawing them.

  diagrams can be embedded in source code comments.

* setup

  1. install emacs
  2. get [[https://raw.github.com/ianxm/emacs-uml/master/uml.el][uml.el]], add it to your emacs installation
  3. run "M-x uml-mode"
  4. move the point onto a graph and hit "C-c C-c"

* usage

**** a list of names will be spread out and centered over timelines

#+BEGIN_SRC
person1 person2 person3
#+END_SRC

  becomes

#+BEGIN_SRC
   person1     person2     person3
      |           |           |
#+END_SRC

**** a dash next to a timeline will create an arrow to its neighbor

#+BEGIN_SRC
   person1     person2     person3
      |-           |           |
#+END_SRC

  becomes

#+BEGIN_SRC
   person1     person2     person3
      |           |           |
      |---------->|           |
      |           |           |
#+END_SRC

**** a greater-than or less-than next to a timeline indicates the end of the arrow

#+BEGIN_SRC
   person1     person2     person3
      |-           |          >|
#+END_SRC

  becomes

#+BEGIN_SRC
   person1     person2     person3
      |           |           |
      |---------------------->|
      |           |           |
#+END_SRC

**** arrows can go to the left also

#+BEGIN_SRC
   person1     person2     person3
      |<           |          -|
#+END_SRC

  becomes

#+BEGIN_SRC
   person1     person2     person3
      |           |           |
      |<----------------------|
      |           |           |
#+END_SRC

**** arrows will be dashed if there is a non-consecutive missing dash at any point in the line

#+BEGIN_SRC
   person1     person2     person3
      |- -          |          >|
#+END_SRC

  or

#+BEGIN_SRC
   person1     person2     person3
      |- ---------------------->|
#+END_SRC

  becomes

#+BEGIN_SRC
   person1     person2     person3
      |           |           |
      | - - - - - - - - - - ->|
      |           |           |
#+END_SRC

**** labels can be entered on the line above or the same line as the arrow

#+BEGIN_SRC
   person1     person2     person3
      | call          |          |
      |-           |          |
#+END_SRC

  or

#+BEGIN_SRC
   person1     person2     person3
      |- call        |          |
#+END_SRC

  becomes

#+BEGIN_SRC
   person1     person2     person3
      |           |           |
      |   call    |           |
      |---------->|           |
      |           |           |
#+END_SRC


**** diagrams can be embedded in source code comments

#+BEGIN_SRC
#
# person1 person2
#    |-

;;
;; person1 person2
;;   |-
;;

/*
 * person1 person2
 *   |-
 */

//
// person1 person2
//   |-
//
#+END_SRC

  becomes

#+BEGIN_SRC
#
#   person1     person2
#      |           |
#      |---------->|
#      |           |

;;
;;   person1     person2
;;      |           |
;;      |---------->|
;;      |           |
;;

/*
 *   person1     person2
 *      |           |
 *      |---------->|
 *      |           |
 */

//
//   person1     person2
//      |           |
//      |---------->|
//      |           |
//
#+END_SRC

* todo

  - multi-line timeline titles
  - separators
  - self messages
  - class diagrams

